apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: insight-worker-scaled-job
  namespace: {{ .Release.Namespace }}
spec:
  jobTargetRef:
    parallelism: 1
    completions: 1
    activeDeadlineSeconds: 21600
    backoffLimit: 2
    template:
      metadata:
        labels:
          app: insight-worker
      spec:
        serviceAccountName: insight-worker
        tolerations:
          - key: "kaytu.io/worker"
            operator: "Exists"
            effect: "NoSchedule"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kaytu.io/node-type
                      operator: In
                      values:
                        - worker
        containers:
          - name: insight-worker
            image: {{ .Values.kaytu.insight.worker.image.repo }}:{{- dig .Values.kaytu.envType .Values.kaytu.insight.worker.image.tag.dev .Values.kaytu.insight.worker.image.tag }}
            command: [ "/insight-worker" ]
            resources:
{{- if eq (.Values.kaytu.workspace.size | toString) "xs" }}
              limits:
                cpu: 200m
                memory: 500Mi
              requests:
                cpu: 200m
                memory: 500Mi
{{- else }}
              limits:
                cpu: 500m
                memory: 2Gi
              requests:
                cpu: 500m
                memory: 2Gi
{{- end }}
            args:
              - --id=$(WORKER_ID)
            imagePullPolicy: Always
            env:
              - name: STEAMPIPE_LOG_LEVEL
                value: "WARN"
              - name: STEAMPIPE_MAX_PARALLEL
                value: "50"
              - name: STEAMPIPE_CACHE
                value: "false"
              - name: STEAMPIPE_UPDATE_CHECK
                value: "false"
              - name: STEAMPIPE_LOG_LEVEL
                value: "TRACE"

              - name: STEAMPIPEPG_HOST
                value: {{ .Values.postgres.name }}.{{ .Release.Namespace }}.svc.cluster.local
              - name: STEAMPIPEPG_PORT
                value: "5432"
              - name: STEAMPIPEPG_USERNAME
                value: "steampipe_user"
              - name: STEAMPIPEPG_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: steampipeUserPassword
              - name: STEAMPIPEPG_DB
                value: "onboard"

{{- include "elastic.envs" . | indent 14 }}

              - name: NATS_URL
                value: "{{ .Release.Namespace }}-nats-{{ .Release.Namespace }}.{{ .Release.Namespace }}.svc.cluster.local:4222"

              - name: WORKER_ID
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name

              - name: PROMETHEUS_PUSH_ADDRESS
                value: "prom-system-prometheus-pushgateway.prom-system.svc.cluster.local:9091"
              - name: ONBOARD_BASEURL
                value: "http://onboard-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
              - name: INVENTORY_BASEURL
                value: "http://inventory-service.{{ .Release.Namespace }}.svc.cluster.local:7251"
              - name: SCHEDULER_BASEURL
                value: "http://describe-scheduler.{{ .Release.Namespace }}.svc.cluster.local:5251"
              - name: ESSINK_BASEURL
                value: "http://es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:8000"

              - name: S3_ENDPOINT
                value: "https://s3.us-east-1.amazonaws.com"
              - name: S3_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: insight-worker-data-secret
                    key: s3AccessKey
              - name: S3_ACCESS_SECRET
                valueFrom:
                  secretKeyRef:
                    name: insight-worker-data-secret
                    key: s3SecretKey
              - name: S3_REGION
                value: "us-east-1"
              - name: S3_BUCKET
                value: "insights-{{ .Release.Namespace }}"

              - name: CURRENT_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace

              - name: JAEGER_SERVICE_NAME
                value: "insight-worker"
              - name: JAEGER_AGENT_HOST
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
  pollingInterval: 60
{{- if eq (.Values.kaytu.workspace.size | toString) "xs" }}
  maxReplicaCount: 1
{{- else }}
  maxReplicaCount: 1
{{- end }}
  successfulJobsHistoryLimit: 1               # Optional. Default: 100. How many completed jobs should be kept.
  failedJobsHistoryLimit: 1                   # Optional. Default: 100. How many failed jobs should be kept.
  envSourceContainerName: insight-worker
  scalingStrategy:
    strategy: "accurate"
  triggers:
    - type: nats-jetstream
      metadata:
        natsServerMonitoringEndpoint: "{{ .Release.Namespace }}-nats-{{ .Release.Namespace }}-headless.{{ .Release.Namespace }}.svc.cluster.local:8222"
        account: "$G"
        stream: "insight"
        consumer: "insight-service-service"
        lagThreshold: "10"
        useHttps: "false"
