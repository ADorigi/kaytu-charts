apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  name: {{.Values.postgres.name}}
  namespace: {{.Release.Namespace}}
  annotations:
    'checksum/postgres-config': {{include (print $.Template.BasePath "/postgres/postgres-config.yaml") . | sha256sum}}
    "karpenter.sh/do-not-disrupt": "true"
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  image: '{{ .Values.postgres.image.repo }}:{{ .Values.postgres.image.tag }}'
  database:
    size: 10Gi
    storageClassName: {{ .Values.storage.className }}
  customConfig: postgres-config
  resources:
    limits:
      memory: '1Gi'
      cpu: '1'
    requests:
      memory: '1Gi'
      cpu: '100m'
  env:
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: superUserPassword
    - name: POSTGRES_REPLICATION_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: replicationUserPassword
    - name: POSTGRES_WORKSPACE_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: workspaceServiceUserPassword
    - name: POSTGRES_AUTH_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: authServiceUserPassword
    - name: POSTGRES_SUBSCRIPTION_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: subscriptionUserPassword
    - name: POSTGRES_COST_ESTIMATOR_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: costEstimatorJobUserPassword
    - name: POSTGRES_PENNYWISE_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: pennywiseUserPassword
    - name: POSTGRES_DEX_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: dexStorageUserPassword
