{{ $tag := .Chart.AppVersion }}
{{ if .Values.kaytu.agent.image.tag }}
{{ $tag = .Values.kaytu.agent.image.tag }}
{{ end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kaytu-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: kaytu-agent
spec:
  serviceName: kaytu-agent
  replicas: 1
  selector:
    matchLabels:
      app: kaytu-agent
  template:
    metadata:
      labels:
        app: kaytu-agent
    spec:
      serviceAccountName: kaytu-agent
{{ if .Values.kaytu.agent.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.kaytu.agent.image.pullSecret }}
{{ end }}
{{ if .Values.kaytu.agent.tolerations }}
      tolerations: {{ .Values.kaytu.agent.tolerations | toYaml | nindent 8 }}
{{ end }}
{{ if .Values.kaytu.agent.nodeSelector }}
      nodeSelector: {{ .Values.kaytu.agent.nodeSelector | toYaml | nindent 8 }}
{{ end }}
{{ if .Values.kaytu.agent.affinity }}
      affinity: {{ .Values.kaytu.agent.affinity | toYaml | nindent 8 }}
{{ end }}
      containers:
      - name: agent
        image: "{{ .Values.kaytu.agent.image.name }}:{{ $tag }}"
        imagePullPolicy: Always
        ports:
          - containerPort: {{ .Values.kaytu.agent.grpc_port }}
        env:
          - name: WORKING_DIRECTORY
            value: "/data/kaytu-agent"
          - name: GRPC_PORT
            value: "{{ .Values.kaytu.agent.grpc_port }}"
          - name: KAYTU_CONFIG__OBSERVABILITY_DAYS
            value: "{{ .Values.kaytu.kaytu.observabilityDays }}"
          - name: KAYTU_CONFIG__API_KEY
            valueFrom:
              secretKeyRef:
                name: kaytu-agent
                key: apiKey
          - name: KAYTU_CONFIG__PROMETHEUS__ADDRESS
            value: "{{ .Values.kaytu.kaytu.prometheus.address }}"
          - name: KAYTU_CONFIG__PROMETHEUS__USERNAME
            value: "{{ .Values.kaytu.kaytu.prometheus.auth.username }}"
          - name: KAYTU_CONFIG__PROMETHEUS__PASSWORD
            value: "{{ .Values.kaytu.kaytu.prometheus.auth.password }}"
          - name: KAYTU_CONFIG__PROMETHEUS__CLIENT_ID
            value: "{{ .Values.kaytu.kaytu.prometheus.auth.clientId }}"
          - name: KAYTU_CONFIG__PROMETHEUS__CLIENT_SECRET
            value: "{{ .Values.kaytu.kaytu.prometheus.auth.clientSecret }}"
          - name: KAYTU_CONFIG__PROMETHEUS__TOKEN_URL
            value: "{{ .Values.kaytu.kaytu.prometheus.auth.tokenUrl }}"
          - name: KAYTU_CONFIG__PROMETHEUS__SCOPES
            value: "{{ .Values.kaytu.kaytu.prometheus.auth.scopesStr }}"

        resources:
          requests:
            cpu: 100m
            memory: 1Gi

        volumeMounts:
          - name: kaytu-agent-data
            mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: kaytu-agent-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
{{- if .Values.kaytu.agent.storage.class }}
        storageClassName: {{ .Values.kaytu.agent.storage.class }}
{{- end }}
        resources:
          requests:
            storage: {{ .Values.kaytu.agent.storage.size }}

